version: '3.8'

services:
  datamanagement:
    build:
      context: ./java_backend
      args:
        SERVICE_NAME: datamanagement
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=root
      - JWT_SECRET_KEY=s/4KMb61LOrMYYAn4rfaQYSgr+le5SMrsMzKw8G6bXc=
      - JWT_ISSUER=user-api
      - SERVICE_NAME=datamanagement
    depends_on:
      - db
    ports: 
      - "8080:8080"

  emailsender:
    build:
      context: ./java_backend
      args:
        SERVICE_NAME: emailsender
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=root
      - JWT_SECRET_KEY=s/4KMb61LOrMYYAn4rfaQYSgr+le5SMrsMzKw8G6bXc=
      - SECRET_KEY=hzdnRC+bRXml8WTloSvSCX/NhuyytESvL8ntJc03cNE=
      - JWT_ISSUER=user-api
      - SPRING_MAIL_PORT=1025
      - SERVICE_NAME=emailsender
    depends_on:
      - db
      - datamanagement
    ports:
      - "8085:8085"

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "2345:5432"
      
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      
  gateway:
    build:
        context: ./node_backend
        args:
            APP_NAME: api_gateway
    environment:
      - JWT_SECRET_KEY=s/4KMb61LOrMYYAn4rfaQYSgr+le5SMrsMzKw8G6bXc=
      - JWT_ISSUER=user-api
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    volumes:
      - ./node_backend/api_gateway:/app
      - /app/node_modules
    depends_on:
      - datamanagement
      - redis
    command: npm run start:dev

  converter:
    build:
      context: ./python_backend
      dockerfile: Dockerfile
      args:
        APP_NAME: converter
    environment:
      - DATABASE_URL=postgresql://postgres:root@db:5432/database
      - JWT_SECRET_KEY=s/4KMb61LOrMYYAn4rfaQYSgr+le5SMrsMzKw8G6bXc=
      - JWT_ISSUER=user-api
    volumes:
      - ./python_backend:/app
    depends_on:
      - db
    ports:
      - "8081:8081"

volumes:
  redis_data: